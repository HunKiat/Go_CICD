name: CI for myFrist.go code #Naming the workflow
on: #for event triggering
  push: 
    branches: [main] # add with comma for more branches to monitor
  pull_request:
    branches: [main]
    
jobs: # job to execute?
  build: # name of the job
    name: Load OS # name for printing
    runs-on: ubuntu-latest # specify VM OS
    steps: 
    - name: Print hello
      run: | # run some commands
        ls 
        echo Hello!!
    - name: Setup Go
      uses: actions/setup-go@v3.2.0
      with:
        go-version: 1.18
    - name: Check Go Version
      run: go version
      
    - name: Checkout Repo
      uses: actions/checkout@v2.4.2
      
    - name: Checkout Remote Pte Repo
      uses: actions/checkout@v2.4.2
      with: 
        repository: lowkh2/GoSchoolRemoteExample
        token: ${{ secrets.GO_SECRET_TO_BEN_TRAINER_GOSCH5 }}
        path: remote
    
    - name: Check remote files
      run: |
        cd remote
        ls -lt
        cat myText.txt
        cd ..
      
    - name: Check File System
      run: ls -lt; cat README.md

    - uses: actions/checkout@v2.4.2
    - name: Slack Notice To Coder
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: changi-hq
        SLACK_COLOR: '#FFCC33' #${{ job.status }}; or a specific color like 'good' or '#ff00ff'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Note: Post or Push Trigger :rocket:'
        SLACK_TITLE: Post or Push trigger by ${{github.actor}}
        SLACK_USERNAME: ivan
        SLACK_WEBHOOK: ${{ secrets.GO_SLACKWEBHOOK }}

    - name: Install dependencies
      run: |
        go mod init calc  # for go mod. If we use go build, it will do the same for the next 3 lines
        go mod tidy # must include go.sum as one of the files.
        go get github.com/franela/goblin
        go install github.com/tebeka/go2xunit@latest
        go test -v
        go test -v | go2xunit -output tests.xml
        
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: "tests.xml"
        
    - if: ${{ failure() }}
      uses: nashmaniac/create-issue-action@v1.1
      name: Create Issue Action
      with:
        title: Build Failed
        token: ${{secrets.GITHUB_TOKEN}}
        assignees: ${{github.actor}}
        labels: worflow-failed
        body: Workflow failed for commit ${{github.sha}}
        
